android.support.v4.app.BackStackState
android.support.v4.app.BackStackState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.Fragment$SavedState
android.support.v4.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentManagerState
android.support.v4.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentState
android.support.v4.app.FragmentState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
android.support.v4.app.FragmentTabHost$SavedState
android.support.v4.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColor(int)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColorResource(int)
android.support.v4.view.PagerTabStrip: int getTabIndicatorColor()
android.support.v4.view.PagerTabStrip: void setTextSpacing(int)
android.support.v4.view.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.PagerTabStrip: void setBackgroundColor(int)
android.support.v4.view.PagerTabStrip: void setBackgroundResource(int)
android.support.v4.view.PagerTabStrip: void setDrawFullUnderline(boolean)
android.support.v4.view.PagerTabStrip: boolean getDrawFullUnderline()
android.support.v4.view.PagerTabStrip: int getMinHeight()
android.support.v4.view.PagerTitleStrip: void setSingleLineAllCaps(android.widget.TextView)
android.support.v4.view.PagerTitleStrip: void setTextSpacing(int)
android.support.v4.view.PagerTitleStrip: int getTextSpacing()
android.support.v4.view.PagerTitleStrip: void setNonPrimaryAlpha(float)
android.support.v4.view.PagerTitleStrip: void setTextColor(int)
android.support.v4.view.PagerTitleStrip: void setGravity(int)
android.support.v4.view.PagerTitleStrip: int getMinHeight()
android.support.v4.view.ViewPager: void setScrollState(int)
android.support.v4.view.ViewPager: void setAdapter(android.support.v4.view.PagerAdapter)
android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()
android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)
android.support.v4.view.ViewPager: int getClientWidth()
android.support.v4.view.ViewPager: void setCurrentItem(int)
android.support.v4.view.ViewPager: int getCurrentItem()
android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
android.support.v4.view.ViewPager: void setChildrenDrawingOrderEnabledCompat(boolean)
android.support.v4.view.ViewPager: int getOffscreenPageLimit()
android.support.v4.view.ViewPager: void setOffscreenPageLimit(int)
android.support.v4.view.ViewPager: void setPageMargin(int)
android.support.v4.view.ViewPager: int getPageMargin()
android.support.v4.view.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.ViewPager: void setPageMarginDrawable(int)
android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)
android.support.v4.view.ViewPager$SavedState
android.support.v4.view.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.DrawerLayout
android.support.v4.widget.DrawerLayout: DrawerLayout(android.content.Context)
android.support.v4.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet,int)
android.support.v4.widget.DrawerLayout: void setScrimColor(int)
android.support.v4.widget.DrawerLayout: void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)
android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int)
android.support.v4.widget.DrawerLayout$SavedState
android.support.v4.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SlidingPaneLayout: void setParallaxDistance(int)
android.support.v4.widget.SlidingPaneLayout: int getParallaxDistance()
android.support.v4.widget.SlidingPaneLayout: void setSliderFadeColor(int)
android.support.v4.widget.SlidingPaneLayout: int getSliderFadeColor()
android.support.v4.widget.SlidingPaneLayout: void setCoveredFadeColor(int)
android.support.v4.widget.SlidingPaneLayout: int getCoveredFadeColor()
android.support.v4.widget.SlidingPaneLayout: void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener)
android.support.v4.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)
android.support.v4.widget.SlidingPaneLayout: void setShadowResource(int)
android.support.v4.widget.SlidingPaneLayout$SavedState
android.support.v4.widget.SlidingPaneLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.baidu.location.Jni
com.baidu.location.Jni: java.lang.String a(byte[],int)
com.baidu.location.Jni: java.lang.String b(double,double,int,int)
com.baidu.location.f
com.baidu.location.f: f()
com.baidu.mapapi.map.MapView
com.baidu.mapapi.map.MapView: MapView(android.content.Context)
com.baidu.mapapi.map.MapView: MapView(android.content.Context,android.util.AttributeSet)
com.baidu.mapapi.map.MapView: MapView(android.content.Context,android.util.AttributeSet,int)
com.baidu.mapapi.map.MapView: MapView(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions)
com.baidu.mapapi.map.MapView: com.baidu.mapapi.map.BaiduMap getMap()
com.baidu.mapapi.map.MapView: void setZoomControlsPosition(android.graphics.Point)
com.baidu.mapapi.map.MapView: void setScaleControlPosition(android.graphics.Point)
com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode: com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] values()
com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode: com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode valueOf(java.lang.String)
com.baidu.mapapi.map.MyLocationConfiguration$LocationMode: com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] values()
com.baidu.mapapi.map.MyLocationConfiguration$LocationMode: com.baidu.mapapi.map.MyLocationConfiguration$LocationMode valueOf(java.lang.String)
com.baidu.mapapi.search.core.PoiInfo$POITYPE: com.baidu.mapapi.search.core.PoiInfo$POITYPE[] values()
com.baidu.mapapi.search.core.PoiInfo$POITYPE: com.baidu.mapapi.search.core.PoiInfo$POITYPE valueOf(java.lang.String)
com.baidu.mapapi.search.core.SearchResult$ERRORNO: com.baidu.mapapi.search.core.SearchResult$ERRORNO[] values()
com.baidu.mapapi.search.core.SearchResult$ERRORNO: com.baidu.mapapi.search.core.SearchResult$ERRORNO valueOf(java.lang.String)
com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy: com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] values()
com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy: com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy valueOf(java.lang.String)
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType: com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] values()
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType: com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType valueOf(java.lang.String)
com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy: com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] values()
com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy: com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy valueOf(java.lang.String)
com.baidu.mapapi.utils.CoordinateConverter$CoordType: com.baidu.mapapi.utils.CoordinateConverter$CoordType[] values()
com.baidu.mapapi.utils.CoordinateConverter$CoordType: com.baidu.mapapi.utils.CoordinateConverter$CoordType valueOf(java.lang.String)
com.baidu.platform.comapi.map.MapRenderer
com.baidu.platform.comapi.map.MapRenderer: void nativeInit(int)
com.baidu.platform.comapi.map.MapRenderer: void nativeResize(int,int,int)
com.baidu.platform.comapi.map.MapRenderer: int nativeRender(int)
com.baidu.platform.comapi.map.e: com.baidu.platform.comapi.map.e[] values()
com.baidu.platform.comapi.map.e: com.baidu.platform.comapi.map.e valueOf(java.lang.String)
com.baidu.platform.comapi.map.x: com.baidu.platform.comapi.map.x[] values()
com.baidu.platform.comapi.map.x: com.baidu.platform.comapi.map.x valueOf(java.lang.String)
com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect
com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect: int Create()
com.baidu.platform.comjni.engine.JNIEngine
com.baidu.platform.comjni.engine.JNIEngine: int initClass(java.lang.Object,int)
com.baidu.platform.comjni.engine.JNIEngine: boolean InitEngine(android.content.Context,android.os.Bundle)
com.baidu.platform.comjni.engine.JNIEngine: boolean UnInitEngine()
com.baidu.platform.comjni.engine.JNIEngine: void SetProxyInfo(java.lang.String,int)
com.baidu.platform.comjni.engine.JNIEngine: boolean StartSocketProc()
com.baidu.platform.comjni.map.basemap.JNIBaseMap
com.baidu.platform.comjni.map.basemap.JNIBaseMap: int Create()
com.baidu.platform.comjni.map.basemap.JNIBaseMap: int SetCallback(int,com.baidu.platform.comjni.map.basemap.BaseMapCallback)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: int Release(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: boolean Init(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void OnPause(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void OnResume(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void ResetImageRes(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void SetMapStatus(int,android.os.Bundle)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: int SetMapControlMode(int,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: android.os.Bundle GetMapStatus(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: android.os.Bundle getDrawingMapStatus(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: float GetZoomToBound(int,android.os.Bundle)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void ShowSatelliteMap(int,boolean)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void ShowTrafficMap(int,boolean)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void ShowHotMap(int,boolean)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: boolean GetBaiduHotMapCityInfo(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void ShowLayers(int,int,boolean)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void UpdateLayers(int,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: int AddLayer(int,int,int,java.lang.String)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void ClearLayer(int,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: java.lang.String GetNearlyObjID(int,int,int,int,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: java.lang.String ScrPtToGeoPoint(int,int,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: java.lang.String GeoPtToScrPoint(int,int,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void SaveScreenToLocal(int,java.lang.String)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: boolean OnRecordAdd(int,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: boolean OnRecordStart(int,int,boolean,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: boolean OnRecordSuspend(int,int,boolean,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: boolean OnRecordRemove(int,int,boolean)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: java.lang.String OnRecordGetAll(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: java.lang.String OnRecordGetAt(int,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: boolean OnRecordImport(int,boolean,boolean)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: java.lang.String OnHotcityGet(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: java.lang.String OnSchcityGet(int,java.lang.String)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void addOneOverlayItem(int,android.os.Bundle)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void updateOneOverlayItem(int,android.os.Bundle)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void removeOneOverlayItem(int,android.os.Bundle)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void PostStatInfo(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: int MapProc(int,int,int,int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: int CreateDuplicate(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: int[] GetScreenBuf(int,int[])
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void enableDrawHouseHeight(int,boolean)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: boolean isDrawHouseHeightEnable(int)
com.baidu.platform.comjni.map.basemap.JNIBaseMap: void clearHeatMapLayerCache(int)
com.baidu.platform.comjni.map.cloud.JniCloud
com.baidu.platform.comjni.map.cloud.JniCloud: int create()
com.baidu.platform.comjni.map.cloud.JniCloud: int release(int)
com.baidu.platform.comjni.map.cloud.JniCloud: java.lang.String getSearchResult(int,int)
com.baidu.platform.comjni.map.cloud.JniCloud: void cloudSearch(int,android.os.Bundle)
com.baidu.platform.comjni.map.cloud.JniCloud: void cloudDetailSearch(int,android.os.Bundle)
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache: int Create()
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache: int Release(int)
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache: void Init(int,android.os.Bundle)
com.baidu.platform.comjni.map.search.JNISearch
com.baidu.platform.comjni.map.search.JNISearch: int Create()
com.baidu.platform.comjni.map.search.JNISearch: int Release(int)
com.baidu.platform.comjni.map.search.JNISearch: java.lang.String GetSearchResult(int,int)
com.baidu.platform.comjni.map.search.JNISearch: boolean ForceSearchByCityName(int,android.os.Bundle)
com.baidu.platform.comjni.map.search.JNISearch: boolean AreaSearch(int,android.os.Bundle)
com.baidu.platform.comjni.map.search.JNISearch: boolean RoutePlanByBus(int,android.os.Bundle)
com.baidu.platform.comjni.map.search.JNISearch: boolean RoutePlanByCar(int,android.os.Bundle)
com.baidu.platform.comjni.map.search.JNISearch: boolean RoutePlanByFoot(int,android.os.Bundle)
com.baidu.platform.comjni.map.search.JNISearch: boolean POIDetailSearchPlace(int,java.lang.String)
com.baidu.platform.comjni.map.search.JNISearch: boolean BusLineDetailSearch(int,java.lang.String,java.lang.String)
com.baidu.platform.comjni.map.search.JNISearch: boolean SuggestionSearch(int,android.os.Bundle)
com.baidu.platform.comjni.map.search.JNISearch: boolean ReverseGeocodeSearch(int,int,int)
com.baidu.platform.comjni.map.search.JNISearch: boolean geocode(int,java.lang.String,java.lang.String)
com.baidu.platform.comjni.map.search.JNISearch: boolean PoiRGCShareUrlSearch(int,int,int,java.lang.String,java.lang.String)
com.baidu.platform.comjni.map.search.JNISearch: boolean PoiDetailShareUrlSearch(int,java.lang.String)
com.baidu.platform.comjni.map.search.JNISearch: boolean MapBoundSearch(int,android.os.Bundle)
com.baidu.platform.comjni.tools.JNITools
com.baidu.platform.comjni.tools.JNITools: boolean TransGeoStr2Pt(java.lang.Object)
com.baidu.platform.comjni.tools.JNITools: void TransNodeStr2Pt(java.lang.Object)
com.baidu.platform.comjni.tools.JNITools: boolean TransGeoStr2ComplexPt(java.lang.Object)
com.baidu.platform.comjni.tools.JNITools: void GetDistanceByMC(java.lang.Object)
com.baidu.platform.comjni.tools.JNITools: boolean CoordinateEncryptEx(float,float,java.lang.String,java.lang.Object)
com.baidu.platform.comjni.tools.ParcelItem
com.baidu.platform.comjni.tools.ParcelItem: android.os.Parcelable$Creator a
com.baidu.vi.VDeviceAPI
com.baidu.vi.VDeviceAPI: void onNetworkStateChanged()
com.baidu.vi.VMsg
com.baidu.vi.VMsg: void OnUserCommand1(int,int,int,int)
com.github.mikephil.charting.charts.BarChart: void setSkew(float)
com.github.mikephil.charting.charts.BarChart: float getSkew()
com.github.mikephil.charting.charts.BarChart: void setDepth(float)
com.github.mikephil.charting.charts.BarChart: float getDepth()
com.github.mikephil.charting.charts.BarChart: void set3DEnabled(boolean)
com.github.mikephil.charting.charts.BarChart: void setDrawHighlightArrow(boolean)
com.github.mikephil.charting.charts.BarChart: void setDrawValueAboveBar(boolean)
com.github.mikephil.charting.charts.BarChart: void setDrawValuesForWholeStack(boolean)
com.github.mikephil.charting.charts.BarChart: void setDrawBarShadow(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: BarLineChartBase(android.content.Context,android.util.AttributeSet,int)
com.github.mikephil.charting.charts.BarLineChartBase: BarLineChartBase(android.content.Context,android.util.AttributeSet)
com.github.mikephil.charting.charts.BarLineChartBase: BarLineChartBase(android.content.Context)
com.github.mikephil.charting.charts.BarLineChartBase: void setInvertYAxisEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setOnTouchListener(android.view.View$OnTouchListener)
com.github.mikephil.charting.charts.BarLineChartBase: void setOnDrawListener(com.github.mikephil.charting.interfaces.OnDrawListener)
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.interfaces.OnDrawListener getDrawListener()
com.github.mikephil.charting.charts.BarLineChartBase: void setGridColor(int)
com.github.mikephil.charting.charts.BarLineChartBase: void setMaxVisibleValueCount(int)
com.github.mikephil.charting.charts.BarLineChartBase: void setHighlightIndicatorEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setStartAtZero(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setGridWidth(float)
com.github.mikephil.charting.charts.BarLineChartBase: void setDragEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setScaleEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDoubleTapToZoomEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDrawVerticalGrid(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDrawHorizontalGrid(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDrawBorder(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDrawGridBackground(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDrawXLabels(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDrawYLabels(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setBorderPositions(com.github.mikephil.charting.charts.BarLineChartBase$BorderPosition[])
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.charts.BarLineChartBase$BorderPosition[] getBorderPositions()
com.github.mikephil.charting.charts.BarLineChartBase: void setBorderWidth(int)
com.github.mikephil.charting.charts.BarLineChartBase: void setBorderColor(int)
com.github.mikephil.charting.charts.BarLineChartBase: float getScaleX()
com.github.mikephil.charting.charts.BarLineChartBase: float getScaleY()
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.YLabels getYLabels()
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.utils.XLabels getXLabels()
com.github.mikephil.charting.charts.BarLineChartBase: void setPinchZoom(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDragOffsetX(float)
com.github.mikephil.charting.charts.BarLineChartBase: void setDragOffsetY(float)
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.data.BarLineScatterCandleData getFilteredData()
com.github.mikephil.charting.charts.BarLineChartBase$BorderPosition: com.github.mikephil.charting.charts.BarLineChartBase$BorderPosition[] values()
com.github.mikephil.charting.charts.BarLineChartBase$BorderPosition: com.github.mikephil.charting.charts.BarLineChartBase$BorderPosition valueOf(java.lang.String)
com.github.mikephil.charting.charts.Chart: Chart(android.content.Context)
com.github.mikephil.charting.charts.Chart: Chart(android.content.Context,android.util.AttributeSet)
com.github.mikephil.charting.charts.Chart: Chart(android.content.Context,android.util.AttributeSet,int)
com.github.mikephil.charting.charts.Chart: void setData(com.github.mikephil.charting.data.ChartData)
com.github.mikephil.charting.charts.Chart: float getPhaseY()
com.github.mikephil.charting.charts.Chart: void setPhaseY(float)
com.github.mikephil.charting.charts.Chart: float getPhaseX()
com.github.mikephil.charting.charts.Chart: void setPhaseX(float)
com.github.mikephil.charting.charts.Chart: android.graphics.Canvas getCanvas()
com.github.mikephil.charting.charts.Chart: void setOnChartValueSelectedListener(com.github.mikephil.charting.interfaces.OnChartValueSelectedListener)
com.github.mikephil.charting.charts.Chart: void setOnChartGestureListener(com.github.mikephil.charting.interfaces.OnChartGestureListener)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.interfaces.OnChartGestureListener getOnChartGestureListener()
com.github.mikephil.charting.charts.Chart: void setHighlightEnabled(boolean)
com.github.mikephil.charting.charts.Chart: float getYValueSum()
com.github.mikephil.charting.charts.Chart: float getYMax()
com.github.mikephil.charting.charts.Chart: float getYChartMin()
com.github.mikephil.charting.charts.Chart: float getYChartMax()
com.github.mikephil.charting.charts.Chart: float getYMin()
com.github.mikephil.charting.charts.Chart: float getDeltaX()
com.github.mikephil.charting.charts.Chart: float getDeltaY()
com.github.mikephil.charting.charts.Chart: float getAverage()
com.github.mikephil.charting.charts.Chart: int getValueCount()
com.github.mikephil.charting.charts.Chart: android.graphics.PointF getCenter()
com.github.mikephil.charting.charts.Chart: android.graphics.PointF getCenterOffsets()
com.github.mikephil.charting.charts.Chart: void setDescriptionTextSize(float)
com.github.mikephil.charting.charts.Chart: void setLogEnabled(boolean)
com.github.mikephil.charting.charts.Chart: void setDescription(java.lang.String)
com.github.mikephil.charting.charts.Chart: void setNoDataText(java.lang.String)
com.github.mikephil.charting.charts.Chart: void setNoDataTextDescription(java.lang.String)
com.github.mikephil.charting.charts.Chart: float getOffsetLeft()
com.github.mikephil.charting.charts.Chart: float getOffsetBottom()
com.github.mikephil.charting.charts.Chart: float getOffsetRight()
com.github.mikephil.charting.charts.Chart: float getOffsetTop()
com.github.mikephil.charting.charts.Chart: void setTouchEnabled(boolean)
com.github.mikephil.charting.charts.Chart: void setDrawYValues(boolean)
com.github.mikephil.charting.charts.Chart: void setMarkerView(com.github.mikephil.charting.utils.MarkerView)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.MarkerView getMarkerView()
com.github.mikephil.charting.charts.Chart: void setDrawUnitsInChart(boolean)
com.github.mikephil.charting.charts.Chart: void setUnit(java.lang.String)
com.github.mikephil.charting.charts.Chart: java.lang.String getUnit()
com.github.mikephil.charting.charts.Chart: void setDrawLegend(boolean)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.Legend getLegend()
com.github.mikephil.charting.charts.Chart: android.graphics.RectF getContentRect()
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.renderer.Transformer getTransformer()
com.github.mikephil.charting.charts.Chart: void setDrawMarkerViews(boolean)
com.github.mikephil.charting.charts.Chart: void setValueFormatter(com.github.mikephil.charting.utils.ValueFormatter)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ValueFormatter getValueFormatter()
com.github.mikephil.charting.charts.Chart: void setValueTextColor(int)
com.github.mikephil.charting.charts.Chart: void setValueTextSize(float)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData getData()
com.github.mikephil.charting.charts.Chart: void setValueTypeface(android.graphics.Typeface)
com.github.mikephil.charting.charts.Chart: void setDescriptionTypeface(android.graphics.Typeface)
com.github.mikephil.charting.charts.Chart: android.graphics.Bitmap getChartBitmap()
com.github.mikephil.charting.charts.Chart: android.view.View getChartView()
com.github.mikephil.charting.charts.LineChart
com.github.mikephil.charting.charts.LineChart: LineChart(android.content.Context)
com.github.mikephil.charting.charts.LineChart: LineChart(android.content.Context,android.util.AttributeSet)
com.github.mikephil.charting.charts.LineChart: LineChart(android.content.Context,android.util.AttributeSet,int)
com.github.mikephil.charting.charts.LineChart: void setHighlightLineWidth(float)
com.github.mikephil.charting.charts.LineChart: float getHighlightLineWidth()
com.github.mikephil.charting.charts.LineChart: void setFillFormatter(com.github.mikephil.charting.utils.FillFormatter)
com.github.mikephil.charting.charts.PieChart: float[] getDrawAngles()
com.github.mikephil.charting.charts.PieChart: float[] getAbsoluteAngles()
com.github.mikephil.charting.charts.PieChart: void setHoleColor(int)
com.github.mikephil.charting.charts.PieChart: void setDrawHoleEnabled(boolean)
com.github.mikephil.charting.charts.PieChart: void setCenterText(java.lang.String)
com.github.mikephil.charting.charts.PieChart: java.lang.String getCenterText()
com.github.mikephil.charting.charts.PieChart: void setDrawCenterText(boolean)
com.github.mikephil.charting.charts.PieChart: void setUsePercentValues(boolean)
com.github.mikephil.charting.charts.PieChart: void setDrawXValues(boolean)
com.github.mikephil.charting.charts.PieChart: float getRequiredBottomOffset()
com.github.mikephil.charting.charts.PieChart: float getRequiredBaseOffset()
com.github.mikephil.charting.charts.PieChart: float getRadius()
com.github.mikephil.charting.charts.PieChart: android.graphics.RectF getCircleBox()
com.github.mikephil.charting.charts.PieChart: android.graphics.PointF getCenterCircleBox()
com.github.mikephil.charting.charts.PieChart: void setCenterTextTypeface(android.graphics.Typeface)
com.github.mikephil.charting.charts.PieChart: void setCenterTextSize(float)
com.github.mikephil.charting.charts.PieChart: void setHoleRadius(float)
com.github.mikephil.charting.charts.PieChart: void setTransparentCircleRadius(float)
com.github.mikephil.charting.charts.PieRadarChartBase: void setRotationAngle(float)
com.github.mikephil.charting.charts.PieRadarChartBase: float getRotationAngle()
com.github.mikephil.charting.charts.PieRadarChartBase: void setRotationEnabled(boolean)
com.github.mikephil.charting.charts.PieRadarChartBase: float getDiameter()
com.github.mikephil.charting.charts.PieRadarChartBase: float getRadius()
com.github.mikephil.charting.charts.PieRadarChartBase: float getRequiredBottomOffset()
com.github.mikephil.charting.charts.PieRadarChartBase: float getRequiredBaseOffset()
com.github.mikephil.charting.charts.PieRadarChartBase: float getFullLegendWidth()
com.github.mikephil.charting.charts.PieRadarChartBase: void setOnTouchListener(android.view.View$OnTouchListener)
com.github.mikephil.charting.charts.RadarChart: float getFactor()
com.github.mikephil.charting.charts.RadarChart: float getSliceAngle()
com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.utils.YLabels getYLabels()
com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.utils.XLabels getXLabels()
com.github.mikephil.charting.charts.RadarChart: void setWebLineWidth(float)
com.github.mikephil.charting.charts.RadarChart: void setWebLineWidthInner(float)
com.github.mikephil.charting.charts.RadarChart: void setWebAlpha(int)
com.github.mikephil.charting.charts.RadarChart: void setWebColor(int)
com.github.mikephil.charting.charts.RadarChart: void setWebColorInner(int)
com.github.mikephil.charting.charts.RadarChart: void setDrawWeb(boolean)
com.github.mikephil.charting.charts.RadarChart: void setDrawYLabels(boolean)
com.github.mikephil.charting.charts.RadarChart: void setDrawXLabels(boolean)
com.github.mikephil.charting.charts.RadarChart: float getRequiredBottomOffset()
com.github.mikephil.charting.charts.RadarChart: float getRequiredBaseOffset()
com.github.mikephil.charting.charts.RadarChart: float getRadius()
com.github.mikephil.charting.charts.ScatterChart: com.github.mikephil.charting.charts.ScatterChart$ScatterShape[] getAllPossibleShapes()
com.github.mikephil.charting.charts.ScatterChart$ScatterShape: com.github.mikephil.charting.charts.ScatterChart$ScatterShape[] values()
com.github.mikephil.charting.charts.ScatterChart$ScatterShape: com.github.mikephil.charting.charts.ScatterChart$ScatterShape valueOf(java.lang.String)
com.github.mikephil.charting.data.filter.Approximator$ApproximatorType: com.github.mikephil.charting.data.filter.Approximator$ApproximatorType[] values()
com.github.mikephil.charting.data.filter.Approximator$ApproximatorType: com.github.mikephil.charting.data.filter.Approximator$ApproximatorType valueOf(java.lang.String)
com.github.mikephil.charting.utils.Legend$LegendForm: com.github.mikephil.charting.utils.Legend$LegendForm[] values()
com.github.mikephil.charting.utils.Legend$LegendForm: com.github.mikephil.charting.utils.Legend$LegendForm valueOf(java.lang.String)
com.github.mikephil.charting.utils.Legend$LegendPosition: com.github.mikephil.charting.utils.Legend$LegendPosition[] values()
com.github.mikephil.charting.utils.Legend$LegendPosition: com.github.mikephil.charting.utils.Legend$LegendPosition valueOf(java.lang.String)
com.github.mikephil.charting.utils.LimitLine$LimitLabelPosition: com.github.mikephil.charting.utils.LimitLine$LimitLabelPosition[] values()
com.github.mikephil.charting.utils.LimitLine$LimitLabelPosition: com.github.mikephil.charting.utils.LimitLine$LimitLabelPosition valueOf(java.lang.String)
com.github.mikephil.charting.utils.MarkerView: void setupLayoutResource(int)
com.github.mikephil.charting.utils.MarkerView: float getXOffset()
com.github.mikephil.charting.utils.MarkerView: float getYOffset()
com.github.mikephil.charting.utils.XLabels$XLabelPosition: com.github.mikephil.charting.utils.XLabels$XLabelPosition[] values()
com.github.mikephil.charting.utils.XLabels$XLabelPosition: com.github.mikephil.charting.utils.XLabels$XLabelPosition valueOf(java.lang.String)
com.github.mikephil.charting.utils.YLabels$YLabelPosition: com.github.mikephil.charting.utils.YLabels$YLabelPosition[] values()
com.github.mikephil.charting.utils.YLabels$YLabelPosition: com.github.mikephil.charting.utils.YLabels$YLabelPosition valueOf(java.lang.String)
com.sports.iTrack.AboutActivity
com.sports.iTrack.AboutActivity: AboutActivity()
com.sports.iTrack.BaseActivity
com.sports.iTrack.BaseActivity: BaseActivity()
com.sports.iTrack.DetailActivity
com.sports.iTrack.DetailActivity: DetailActivity()
com.sports.iTrack.DetailActivity: void onClick(android.view.View)
com.sports.iTrack.HistoryActivity
com.sports.iTrack.HistoryActivity: HistoryActivity()
com.sports.iTrack.MainActivity
com.sports.iTrack.MainActivity: MainActivity()
com.sports.iTrack.MainActivity: void onClick(android.view.View)
com.sports.iTrack.MeActivity
com.sports.iTrack.MeActivity: MeActivity()
com.sports.iTrack.R$array: int planets_array
com.sports.iTrack.R$color: int bt_pause_color
com.sports.iTrack.R$color: int bt_start_color
com.sports.iTrack.R$drawable: int BackBar
com.sports.iTrack.R$drawable: int bike
com.sports.iTrack.R$drawable: int btn_route_icon_switch_pressed
com.sports.iTrack.R$drawable: int drawer_profile_bg_pressed
com.sports.iTrack.R$drawable: int drawer_shadow
com.sports.iTrack.R$drawable: int ic_drawer
com.sports.iTrack.R$drawable: int ic_launcher
com.sports.iTrack.R$drawable: int ic_launcher_bak
com.sports.iTrack.R$drawable: int ic_leftdrawer_about
com.sports.iTrack.R$drawable: int ic_leftdrawer_history
com.sports.iTrack.R$drawable: int ic_leftdrawer_music
com.sports.iTrack.R$drawable: int ic_leftdrawer_route
com.sports.iTrack.R$drawable: int ic_leftdrawer_troops
com.sports.iTrack.R$drawable: int ic_leftdrawer_workout
com.sports.iTrack.R$drawable: int ic_menu_moreoverflow
com.sports.iTrack.R$drawable: int icon_android_cycle_demo_black
com.sports.iTrack.R$drawable: int icon_android_cycle_demo_white
com.sports.iTrack.R$drawable: int icon_en
com.sports.iTrack.R$drawable: int icon_gcoding
com.sports.iTrack.R$drawable: int icon_share_loc_locate
com.sports.iTrack.R$drawable: int icon_st
com.sports.iTrack.R$drawable: int left_friends
com.sports.iTrack.R$drawable: int left_group
com.sports.iTrack.R$drawable: int left_heat
com.sports.iTrack.R$drawable: int left_record
com.sports.iTrack.R$drawable: int left_thing
com.sports.iTrack.R$drawable: int left_weal
com.sports.iTrack.R$drawable: int liantu
com.sports.iTrack.R$drawable: int location_marker
com.sports.iTrack.R$drawable: int popup
com.sports.iTrack.R$drawable: int profile_silhuette
com.sports.iTrack.R$drawable: int route_crosscity_detail_train_gray
com.sports.iTrack.R$drawable: int route_detail_car
com.sports.iTrack.R$drawable: int route_detail_walk
com.sports.iTrack.R$drawable: int sport3
com.sports.iTrack.R$drawable: int welcome1
com.sports.iTrack.R$drawable: int welcome2
com.sports.iTrack.R$id: int action_bus_plan
com.sports.iTrack.R$id: int action_car_plan
com.sports.iTrack.R$id: int action_change
com.sports.iTrack.R$id: int action_foot_plan
com.sports.iTrack.R$id: int bmapView
com.sports.iTrack.R$id: int bt_about
com.sports.iTrack.R$id: int bt_detail_about
com.sports.iTrack.R$id: int bt_detail_mapshow
com.sports.iTrack.R$id: int bt_detail_show
com.sports.iTrack.R$id: int bt_history
com.sports.iTrack.R$id: int bt_login
com.sports.iTrack.R$id: int bt_music
com.sports.iTrack.R$id: int bt_route_plan
com.sports.iTrack.R$id: int bt_start
com.sports.iTrack.R$id: int bt_track
com.sports.iTrack.R$id: int bt_weather
com.sports.iTrack.R$id: int btn_switch
com.sports.iTrack.R$id: int button
com.sports.iTrack.R$id: int button2
com.sports.iTrack.R$id: int chart
com.sports.iTrack.R$id: int content_frame
com.sports.iTrack.R$id: int drawer_layout
com.sports.iTrack.R$id: int drive
com.sports.iTrack.R$id: int end
com.sports.iTrack.R$id: int imageView
com.sports.iTrack.R$id: int imageView2
com.sports.iTrack.R$id: int image_icon
com.sports.iTrack.R$id: int left_drawer
com.sports.iTrack.R$id: int ll_cal
com.sports.iTrack.R$id: int ll_distance
com.sports.iTrack.R$id: int ll_duration
com.sports.iTrack.R$id: int ll_left_drawer
com.sports.iTrack.R$id: int ll_left_drawer_of_login
com.sports.iTrack.R$id: int ll_speed
com.sports.iTrack.R$id: int map
com.sports.iTrack.R$id: int more_flow
com.sports.iTrack.R$id: int rl_detail_about
com.sports.iTrack.R$id: int route_llayout
com.sports.iTrack.R$id: int start
com.sports.iTrack.R$id: int switch1
com.sports.iTrack.R$id: int test1
com.sports.iTrack.R$id: int text2
com.sports.iTrack.R$id: int textView
com.sports.iTrack.R$id: int textView0
com.sports.iTrack.R$id: int textView2
com.sports.iTrack.R$id: int textView3
com.sports.iTrack.R$id: int textView4
com.sports.iTrack.R$id: int textView5
com.sports.iTrack.R$id: int textView6
com.sports.iTrack.R$id: int textView7
com.sports.iTrack.R$id: int textView8
com.sports.iTrack.R$id: int textView_end
com.sports.iTrack.R$id: int textView_start
com.sports.iTrack.R$id: int transit
com.sports.iTrack.R$id: int tv_altitude_range
com.sports.iTrack.R$id: int tv_avg_speed
com.sports.iTrack.R$id: int tv_description
com.sports.iTrack.R$id: int tv_distance
com.sports.iTrack.R$id: int tv_distance_content
com.sports.iTrack.R$id: int tv_distance_title
com.sports.iTrack.R$id: int tv_duration
com.sports.iTrack.R$id: int tv_endtime
com.sports.iTrack.R$id: int tv_gps
com.sports.iTrack.R$id: int tv_gps_intension
com.sports.iTrack.R$id: int tv_kcal_content
com.sports.iTrack.R$id: int tv_kcal_title
com.sports.iTrack.R$id: int tv_speed_content
com.sports.iTrack.R$id: int tv_speed_range
com.sports.iTrack.R$id: int tv_speed_title
com.sports.iTrack.R$id: int tv_sport_time
com.sports.iTrack.R$id: int tv_sporttype
com.sports.iTrack.R$id: int tv_time
com.sports.iTrack.R$id: int walk
com.sports.iTrack.R$layout: int about_layout
com.sports.iTrack.R$layout: int backup_layout
com.sports.iTrack.R$layout: int base_layout
com.sports.iTrack.R$layout: int detail_track_layout
com.sports.iTrack.R$layout: int drawer_list_item
com.sports.iTrack.R$layout: int history_layout
com.sports.iTrack.R$layout: int list_item
com.sports.iTrack.R$layout: int main
com.sports.iTrack.R$layout: int me_layout
com.sports.iTrack.R$layout: int route_plan_layout
com.sports.iTrack.R$layout: int test_layout
com.sports.iTrack.R$layout: int troops_layout
com.sports.iTrack.R$layout: int welcome_layout
com.sports.iTrack.R$menu: int base_actionbar_menu
com.sports.iTrack.R$menu: int menu
com.sports.iTrack.R$string: int app_name
com.sports.iTrack.R$string: int bt_pause
com.sports.iTrack.R$string: int bt_start
com.sports.iTrack.R$string: int drawer_close
com.sports.iTrack.R$string: int drawer_open
com.sports.iTrack.R$string: int moreflow
com.sports.iTrack.R$string: int str_hint
com.sports.iTrack.R$string: int welcome1
com.sports.iTrack.RoutePlanActivity
com.sports.iTrack.RoutePlanActivity: RoutePlanActivity()
com.sports.iTrack.TestActivity
com.sports.iTrack.TestActivity: TestActivity()
com.sports.iTrack.TrackApplication
com.sports.iTrack.TrackApplication: TrackApplication()
com.sports.iTrack.TroopsActivity
com.sports.iTrack.TroopsActivity: TroopsActivity()
com.sports.iTrack.WelcomePage
com.sports.iTrack.WelcomePage: WelcomePage()
com.sports.iTrack.WelcomePage: void onClick(android.view.View)
org.litepal.LitePalApplication: LitePalApplication()
